name: Release Workflow

on:
  push:
    branches:
      - main

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get version from pom.xml
        id: get-version
        run: |
          version=$(grep -oPm1 "(?<=<version>)[^<]+" pom.xml)
          echo "Found version $version"
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Get latest release version
        id: get-latest-release
        run: |
          latest_release=$(curl -s https://api.github.com/repos/$GITHUB_REPOSITORY/releases/latest | jq -r '.tag_name')
          echo "Latest version $latest_release"
          echo "latest_release=$latest_release" >> $GITHUB_OUTPUT

      - name: Compare versions
        id: compare-versions
        run: |
          if [ "${{ steps.get-version.outputs.version }}" != "${{ steps.get-latest-release.outputs-latest_release }}" ]; then
            echo "New release should be made"
            echo "needs_release=true" >> $GITHUB_OUTPUT
          else
            echo "New release should not be made"
            echo "needs_release=false" >> $GITHUB_OUTPUT
          fi

  build-and-release:
    needs: check-version
    runs-on: ubuntu-latest
    if: ${{ needs.check-version.outputs.needs_release }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build project
        run: mvn clean install

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            target/splatoon-${{ env.version }}.jar
          tag_name: ${{ env.version }}
          prerelease: ${{ contains(env.version, 'SNAPSHOT') }}
          token: ${{ secrets.GITHUB_TOKEN }}
